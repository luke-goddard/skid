<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="example__driver_8c" kind="file" language="C++">
    <compoundname>example_driver.c</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int timeout</definition>
        <argsstring></argsstring>
        <name>timeout</name>
        <initializer>= WATCHDOG_TIMEOUT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="63" column="12" bodyfile="tests/resources/example_driver.c" bodystart="63" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" compoundref="example__driver_8c" startline="174" endline="178">wdt_keepalive</referencedby>
        <referencedby refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" compoundref="example__driver_8c" startline="151" endline="164">wdt_startup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int use_gpio</definition>
        <argsstring></argsstring>
        <name>use_gpio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="69" column="12" bodyfile="tests/resources/example_driver.c" bodystart="69" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" compoundref="example__driver_8c" startline="124" endline="149">wdt_change</referencedby>
        <referencedby refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" compoundref="example__driver_8c" startline="91" endline="118">wdt_timer_ping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a11569047c88708a1564c566d8641309e" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long next_heartbeat</definition>
        <argsstring></argsstring>
        <name>next_heartbeat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="76" column="22" bodyfile="tests/resources/example_driver.c" bodystart="76" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" compoundref="example__driver_8c" startline="174" endline="178">wdt_keepalive</referencedby>
        <referencedby refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" compoundref="example__driver_8c" startline="151" endline="164">wdt_startup</referencedby>
        <referencedby refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" compoundref="example__driver_8c" startline="91" endline="118">wdt_timer_ping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a1f170f01cbb5c4ad3fe404d2e6ab740c" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long wdt_is_open</definition>
        <argsstring></argsstring>
        <name>wdt_is_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="77" column="22" bodyfile="tests/resources/example_driver.c" bodystart="77" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" compoundref="example__driver_8c" startline="221" endline="232">fop_close</referencedby>
        <referencedby refid="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" compoundref="example__driver_8c" startline="211" endline="219">fop_open</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char wdt_expect_close</definition>
        <argsstring></argsstring>
        <name>wdt_expect_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="78" column="13" bodyfile="tests/resources/example_driver.c" bodystart="78" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" compoundref="example__driver_8c" startline="221" endline="232">fop_close</referencedby>
        <referencedby refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" compoundref="example__driver_8c" startline="184" endline="209">fop_write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" prot="public" static="yes" mutable="no">
        <type>struct pci_dev *</type>
        <definition>struct pci_dev* alim7101_pmu</definition>
        <argsstring></argsstring>
        <name>alim7101_pmu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="79" column="21" bodyfile="tests/resources/example_driver.c" bodystart="79" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" compoundref="example__driver_8c" startline="350" endline="358">alim7101_wdt_unload</referencedby>
        <referencedby refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" compoundref="example__driver_8c" startline="124" endline="149">wdt_change</referencedby>
        <referencedby refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" compoundref="example__driver_8c" startline="91" endline="118">wdt_timer_ping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool nowayout</definition>
        <argsstring></argsstring>
        <name>nowayout</name>
        <initializer>= WATCHDOG_NOWAYOUT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="81" column="13" bodyfile="tests/resources/example_driver.c" bodystart="81" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" compoundref="example__driver_8c" startline="184" endline="209">fop_write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1af86896cad0da8791f61f01fdd0fc5205" prot="public" static="yes" mutable="no">
        <type>const struct file_operations</type>
        <definition>const struct file_operations wdt_fops</definition>
        <argsstring></argsstring>
        <name>wdt_fops</name>
        <initializer>= {
	.owner		=	THIS_MODULE,
	.llseek		=	no_llseek,
	.write		=	<ref refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" kindref="member">fop_write</ref>,
	.open		=	<ref refid="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" kindref="member">fop_open</ref>,
	.release	=	<ref refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" kindref="member">fop_close</ref>,
	.unlocked_ioctl	=	<ref refid="example__driver_8c_1a243d17718e8710d65139b4ac93320c5a" kindref="member">fop_ioctl</ref>,
	.compat_ioctl	= 	compat_ptr_ioctl,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="234" column="13" bodyfile="tests/resources/example_driver.c" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1ab669840a7c61624e8a787530ad2b0ed0" prot="public" static="yes" mutable="no">
        <type>struct miscdevice</type>
        <definition>struct miscdevice wdt_miscdev</definition>
        <argsstring></argsstring>
        <name>wdt_miscdev</name>
        <initializer>= {
	.minor	=	WATCHDOG_MINOR,
	.name	=	&quot;watchdog&quot;,
	.fops	=	&amp;<ref refid="example__driver_8c_1af86896cad0da8791f61f01fdd0fc5205" kindref="member">wdt_fops</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="234" column="13" bodyfile="tests/resources/example_driver.c" bodystart="300" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" compoundref="example__driver_8c" startline="350" endline="358">alim7101_wdt_unload</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a5ea88b520e14d10783acd0b3aa375c0f" prot="public" static="yes" mutable="no">
        <type>struct notifier_block</type>
        <definition>struct notifier_block wdt_restart_handler</definition>
        <argsstring></argsstring>
        <name>wdt_restart_handler</name>
        <initializer>= {
	.notifier_call = <ref refid="example__driver_8c_1a8923bf5bb4f48d96b3eb5c7ad0953025" kindref="member">wdt_restart_handle</ref>,
	.priority = 128,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="306" column="12" bodyfile="tests/resources/example_driver.c" bodystart="323" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" compoundref="example__driver_8c" startline="350" endline="358">alim7101_wdt_unload</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a384322b2b20db238eeeeb0663fef4234" prot="public" static="yes" mutable="no">
        <type>struct notifier_block</type>
        <definition>struct notifier_block wdt_notifier</definition>
        <argsstring></argsstring>
        <name>wdt_notifier</name>
        <initializer>= {
	.notifier_call = <ref refid="example__driver_8c_1ae2e656b6006f19d3b65a7e6b49bb3d4e" kindref="member">wdt_notify_sys</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="332" column="12" bodyfile="tests/resources/example_driver.c" bodystart="346" bodyend="-1"/>
        <referencedby refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" compoundref="example__driver_8c" startline="360" endline="436">alim7101_wdt_init</referencedby>
        <referencedby refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" compoundref="example__driver_8c" startline="350" endline="358">alim7101_wdt_unload</referencedby>
      </memberdef>
      <memberdef kind="variable" id="example__driver_8c_1a94f12b23eabb77bfb3f23292aef71505" prot="public" static="yes" mutable="no">
        <type>const struct pci_device_id alim7101_pci_tbl[]</type>
        <definition>const struct pci_device_id alim7101_pci_tbl [] __used</definition>
        <argsstring></argsstring>
        <name>__used</name>
        <initializer>= {
	{ PCI_DEVICE(PCI_VENDOR_ID_AL, PCI_DEVICE_ID_AL_M1533) },
	{ PCI_DEVICE(PCI_VENDOR_ID_AL, PCI_DEVICE_ID_AL_M7101) },
	{ }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="441" column="34" bodyfile="tests/resources/example_driver.c" bodystart="441" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="example__driver_8c_1afeb12777905626f2c1f274c9f86343c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_param</definition>
        <argsstring>(timeout, int, 0)</argsstring>
        <name>module_param</name>
        <param>
          <type><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="64" column="1" declfile="tests/resources/example_driver.c" declline="64" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1af25cc749320e2c0cc2b4cbc480afbb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_PARM_DESC</definition>
        <argsstring>(timeout, &quot;Watchdog timeout in seconds. (1&lt;=timeout&lt;=3600, default=&quot; __MODULE_STRING(WATCHDOG_TIMEOUT) &quot;)&quot;)</argsstring>
        <name>MODULE_PARM_DESC</name>
        <param>
          <type><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref></type>
        </param>
        <param>
          <type>&quot;Watchdog <ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref> in seconds. (1&lt;=<ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref>&lt;=3600, default=&quot; __MODULE_STRING(WATCHDOG_TIMEOUT) &quot;)&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="65" column="1" declfile="tests/resources/example_driver.c" declline="65" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a657f50c2feba949a7af83a18f03cde10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_param</definition>
        <argsstring>(use_gpio, int, 0)</argsstring>
        <name>module_param</name>
        <param>
          <type><ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref></type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="70" column="1" declfile="tests/resources/example_driver.c" declline="70" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a428a96a032879f7844177ddb838b82fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_PARM_DESC</definition>
        <argsstring>(use_gpio, &quot;Use the gpio watchdog (required by old cobalt boards).&quot;)</argsstring>
        <name>MODULE_PARM_DESC</name>
        <param>
          <type><ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref></type>
        </param>
        <param>
          <type>&quot;Use the gpio watchdog (required by old cobalt boards).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="71" column="1" declfile="tests/resources/example_driver.c" declline="71" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wdt_timer_ping</definition>
        <argsstring>(struct timer_list *)</argsstring>
        <name>wdt_timer_ping</name>
        <param>
          <type>struct timer_list *</type>
          <defname>unused</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="91" column="13" bodyfile="tests/resources/example_driver.c" bodystart="91" bodyend="118" declfile="tests/resources/example_driver.c" declline="74" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a79b0165c2b6b7d7544e91d0be76e0a16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static DEFINE_TIMER</definition>
        <argsstring>(timer, wdt_timer_ping)</argsstring>
        <name>DEFINE_TIMER</name>
        <param>
          <type>timer</type>
        </param>
        <param>
          <type><ref refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" kindref="member">wdt_timer_ping</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="75" column="8" declfile="tests/resources/example_driver.c" declline="75" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ac7c75cc365a6b11ddbda6962b254e98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_param</definition>
        <argsstring>(nowayout, bool, 0)</argsstring>
        <name>module_param</name>
        <param>
          <type><ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref></type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="82" column="1" declfile="tests/resources/example_driver.c" declline="82" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ae0d999635dc45748a8691bbfe8a7ee71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_PARM_DESC</definition>
        <argsstring>(nowayout, &quot;Watchdog cannot be stopped once started (default=&quot; __MODULE_STRING(WATCHDOG_NOWAYOUT) &quot;)&quot;)</argsstring>
        <name>MODULE_PARM_DESC</name>
        <param>
          <type><ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref></type>
        </param>
        <param>
          <type>&quot;Watchdog cannot be stopped once started (default=&quot; __MODULE_STRING(WATCHDOG_NOWAYOUT) &quot;)&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="83" column="1" declfile="tests/resources/example_driver.c" declline="83" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wdt_change</definition>
        <argsstring>(int writeval)</argsstring>
        <name>wdt_change</name>
        <param>
          <type>int</type>
          <declname>writeval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="124" column="13" bodyfile="tests/resources/example_driver.c" bodystart="124" bodyend="149"/>
        <referencedby refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" compoundref="example__driver_8c" startline="151" endline="164">wdt_startup</referencedby>
        <referencedby refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" compoundref="example__driver_8c" startline="166" endline="172">wdt_turnoff</referencedby>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wdt_startup</definition>
        <argsstring>(void)</argsstring>
        <name>wdt_startup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="151" column="13" bodyfile="tests/resources/example_driver.c" bodystart="151" bodyend="164"/>
        <referencedby refid="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" compoundref="example__driver_8c" startline="211" endline="219">fop_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wdt_turnoff</definition>
        <argsstring>(void)</argsstring>
        <name>wdt_turnoff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="166" column="13" bodyfile="tests/resources/example_driver.c" bodystart="166" bodyend="172"/>
        <referencedby refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" compoundref="example__driver_8c" startline="350" endline="358">alim7101_wdt_unload</referencedby>
        <referencedby refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" compoundref="example__driver_8c" startline="221" endline="232">fop_close</referencedby>
        <referencedby refid="example__driver_8c_1ae2e656b6006f19d3b65a7e6b49bb3d4e" compoundref="example__driver_8c" startline="332" endline="339">wdt_notify_sys</referencedby>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wdt_keepalive</definition>
        <argsstring>(void)</argsstring>
        <name>wdt_keepalive</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="174" column="13" bodyfile="tests/resources/example_driver.c" bodystart="174" bodyend="178"/>
        <referencedby refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" compoundref="example__driver_8c" startline="184" endline="209">fop_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t fop_write</definition>
        <argsstring>(struct file *file, const char __user *buf, size_t count, loff_t *ppos)</argsstring>
        <name>fop_write</name>
        <param>
          <type>struct file *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char __user *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>loff_t *</type>
          <declname>ppos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="184" column="16" bodyfile="tests/resources/example_driver.c" bodystart="184" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fop_open</definition>
        <argsstring>(struct inode *inode, struct file *file)</argsstring>
        <name>fop_open</name>
        <param>
          <type>struct inode *</type>
          <declname>inode</declname>
        </param>
        <param>
          <type>struct file *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="211" column="12" bodyfile="tests/resources/example_driver.c" bodystart="211" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fop_close</definition>
        <argsstring>(struct inode *inode, struct file *file)</argsstring>
        <name>fop_close</name>
        <param>
          <type>struct inode *</type>
          <declname>inode</declname>
        </param>
        <param>
          <type>struct file *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="221" column="12" bodyfile="tests/resources/example_driver.c" bodystart="221" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a243d17718e8710d65139b4ac93320c5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>static long fop_ioctl</definition>
        <argsstring>(struct file *file, unsigned int cmd, unsigned long arg)</argsstring>
        <name>fop_ioctl</name>
        <param>
          <type>struct file *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="234" column="13" bodyfile="tests/resources/example_driver.c" bodystart="234" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a8923bf5bb4f48d96b3eb5c7ad0953025" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wdt_restart_handle</definition>
        <argsstring>(struct notifier_block *this, unsigned long mode, void *cmd)</argsstring>
        <name>wdt_restart_handle</name>
        <param>
          <type>struct notifier_block *</type>
          <declname>this</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="306" column="12" bodyfile="tests/resources/example_driver.c" bodystart="306" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ae2e656b6006f19d3b65a7e6b49bb3d4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wdt_notify_sys</definition>
        <argsstring>(struct notifier_block *this, unsigned long code, void *unused)</argsstring>
        <name>wdt_notify_sys</name>
        <param>
          <type>struct notifier_block *</type>
          <declname>this</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>code</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="332" column="12" bodyfile="tests/resources/example_driver.c" bodystart="332" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void __exit</type>
        <definition>static void __exit alim7101_wdt_unload</definition>
        <argsstring>(void)</argsstring>
        <name>alim7101_wdt_unload</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="350" column="20" bodyfile="tests/resources/example_driver.c" bodystart="350" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int __init</type>
        <definition>static int __init alim7101_wdt_init</definition>
        <argsstring>(void)</argsstring>
        <name>alim7101_wdt_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="360" column="19" bodyfile="tests/resources/example_driver.c" bodystart="360" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a42c0391451b261972c315e7044b068aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_init</definition>
        <argsstring>(alim7101_wdt_init)</argsstring>
        <name>module_init</name>
        <param>
          <type><ref refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" kindref="member">alim7101_wdt_init</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="438" column="1" declfile="tests/resources/example_driver.c" declline="438" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a2e179075564f32d7818698bb5d675973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>module_exit</definition>
        <argsstring>(alim7101_wdt_unload)</argsstring>
        <name>module_exit</name>
        <param>
          <type><ref refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" kindref="member">alim7101_wdt_unload</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="439" column="1" declfile="tests/resources/example_driver.c" declline="439" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a5024044360a43a8858b6a6976245f194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_DEVICE_TABLE</definition>
        <argsstring>(pci, alim7101_pci_tbl)</argsstring>
        <name>MODULE_DEVICE_TABLE</name>
        <param>
          <type>pci</type>
        </param>
        <param>
          <type>alim7101_pci_tbl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="447" column="1" declfile="tests/resources/example_driver.c" declline="447" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ae6b71481a5b225cf5c716e9ab45acfe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_AUTHOR</definition>
        <argsstring>(&quot;Steve Hill&quot;)</argsstring>
        <name>MODULE_AUTHOR</name>
        <param>
          <type>&quot;Steve Hill&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="449" column="1" declfile="tests/resources/example_driver.c" declline="449" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1a57197bb88ab87ed1035ff242938b2335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_DESCRIPTION</definition>
        <argsstring>(&quot;ALi M7101 PMU Computer Watchdog Timer driver&quot;)</argsstring>
        <name>MODULE_DESCRIPTION</name>
        <param>
          <type>&quot;ALi M7101 PMU Computer Watchdog Timer driver&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="450" column="1" declfile="tests/resources/example_driver.c" declline="450" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="example__driver_8c_1ad94b36675e7eb067ea3ce6ff9e244a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MODULE_LICENSE</definition>
        <argsstring>(&quot;GPL&quot;)</argsstring>
        <name>MODULE_LICENSE</name>
        <param>
          <type>&quot;GPL&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/resources/example_driver.c" line="451" column="1" declfile="tests/resources/example_driver.c" declline="451" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>GPL-2.0-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>ALi<sp/>M7101<sp/>PMU<sp/>Computer<sp/>Watchdog<sp/>Timer<sp/>driver</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Based<sp/>on<sp/>w83877f_wdt.c<sp/>by<sp/>Scott<sp/>Jennings<sp/>&lt;linuxdrivers@oro.net&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>the<sp/>Cobalt<sp/>kernel<sp/>WDT<sp/>timer<sp/>driver<sp/>by<sp/>Tim<sp/>Hockin</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;thockin@cobaltnet.com&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>(c)2002<sp/>Steve<sp/>Hill<sp/>&lt;steve@navaho.co.uk&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>WDT<sp/>driver<sp/>is<sp/>different<sp/>from<sp/>most<sp/>other<sp/>Linux<sp/>WDT</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>drivers<sp/>in<sp/>that<sp/>the<sp/>driver<sp/>will<sp/>ping<sp/>the<sp/>watchdog<sp/>by<sp/>itself,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>because<sp/>this<sp/>particular<sp/>WDT<sp/>has<sp/>a<sp/>very<sp/>short<sp/>timeout<sp/>(1.6</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>seconds)<sp/>and<sp/>it<sp/>would<sp/>be<sp/>insane<sp/>to<sp/>count<sp/>on<sp/>any<sp/>userspace</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>daemon<sp/>always<sp/>getting<sp/>scheduled<sp/>within<sp/>that<sp/>time<sp/>frame.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>Additions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Aug<sp/>23,<sp/>2004<sp/>-<sp/>Added<sp/>use_gpio<sp/>module<sp/>parameter<sp/>for<sp/>use<sp/>on<sp/>revision<sp/>a1d<sp/>PMUs</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>on<sp/>very<sp/>old<sp/>cobalt<sp/>hardware.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<sp/>Mike<sp/>Waychison<sp/>&lt;michael.waychison@sun.com&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pr_fmt(fmt)<sp/>KBUILD_MODNAME<sp/>&quot;:<sp/>&quot;<sp/>fmt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/module.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/moduleparam.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/miscdevice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/watchdog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/ioport.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/notifier.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/reboot.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/fs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/pci.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/uaccess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WDT_ENABLE<sp/>0x9C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WDT_DISABLE<sp/>0x8C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALI_7101_WDT<sp/><sp/><sp/><sp/>0x92</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALI_7101_GPIO<sp/><sp/><sp/>0x7D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALI_7101_GPIO_O<sp/>0x7E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALI_WDT_ARM<sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>We&apos;re<sp/>going<sp/>to<sp/>use<sp/>a<sp/>1<sp/>second<sp/>timeout.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>If<sp/>we<sp/>reset<sp/>the<sp/>watchdog<sp/>every<sp/>~250ms<sp/>we<sp/>should<sp/>be<sp/>safe.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WDT_INTERVAL<sp/>(HZ/4+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>We<sp/>must<sp/>not<sp/>require<sp/>too<sp/>good<sp/>response<sp/>from<sp/>the<sp/>userspace<sp/>daemon.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Here<sp/>we<sp/>require<sp/>the<sp/>userspace<sp/>daemon<sp/>to<sp/>send<sp/>us<sp/>a<sp/>heartbeat</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>char<sp/>to<sp/>/dev/watchdog<sp/>every<sp/>30<sp/>seconds.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WATCHDOG_TIMEOUT<sp/>30<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>30<sp/>sec<sp/>default<sp/>timeout<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>in<sp/>seconds,<sp/>will<sp/>be<sp/>multiplied<sp/>by<sp/>HZ<sp/>to<sp/>get<sp/>seconds<sp/>to<sp/>wait<sp/>for<sp/>a<sp/>ping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref><sp/>=<sp/>WATCHDOG_TIMEOUT;</highlight></codeline>
<codeline lineno="64" refid="example__driver_8c_1afeb12777905626f2c1f274c9f86343c7" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1afeb12777905626f2c1f274c9f86343c7" kindref="member">module_param</ref>(<ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="65" refid="example__driver_8c_1af25cc749320e2c0cc2b4cbc480afbb22" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1af25cc749320e2c0cc2b4cbc480afbb22" kindref="member">MODULE_PARM_DESC</ref>(<ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Watchdog<sp/>timeout<sp/>in<sp/>seconds.<sp/>(1&lt;=timeout&lt;=3600,<sp/>default=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__MODULE_STRING(WATCHDOG_TIMEOUT)<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>pic<sp/>(for<sp/>a1d<sp/>revision<sp/>alim7101)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="example__driver_8c_1a657f50c2feba949a7af83a18f03cde10" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1afeb12777905626f2c1f274c9f86343c7" kindref="member">module_param</ref>(<ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="71" refid="example__driver_8c_1a428a96a032879f7844177ddb838b82fa" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1af25cc749320e2c0cc2b4cbc480afbb22" kindref="member">MODULE_PARM_DESC</ref>(<ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>the<sp/>gpio<sp/>watchdog<sp/>(required<sp/>by<sp/>old<sp/>cobalt<sp/>boards).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" kindref="member">wdt_timer_ping</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timer_list<sp/>*);</highlight></codeline>
<codeline lineno="75" refid="example__driver_8c_1a79b0165c2b6b7d7544e91d0be76e0a16" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a79b0165c2b6b7d7544e91d0be76e0a16" kindref="member">DEFINE_TIMER</ref>(timer,<sp/><ref refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" kindref="member">wdt_timer_ping</ref>);</highlight></codeline>
<codeline lineno="76" refid="example__driver_8c_1a11569047c88708a1564c566d8641309e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a11569047c88708a1564c566d8641309e" kindref="member">next_heartbeat</ref>;</highlight></codeline>
<codeline lineno="77" refid="example__driver_8c_1a1f170f01cbb5c4ad3fe404d2e6ab740c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a1f170f01cbb5c4ad3fe404d2e6ab740c" kindref="member">wdt_is_open</ref>;</highlight></codeline>
<codeline lineno="78" refid="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" kindref="member">wdt_expect_close</ref>;</highlight></codeline>
<codeline lineno="79" refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pci_dev<sp/>*<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref><sp/>=<sp/>WATCHDOG_NOWAYOUT;</highlight></codeline>
<codeline lineno="82" refid="example__driver_8c_1ac7c75cc365a6b11ddbda6962b254e98f" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1afeb12777905626f2c1f274c9f86343c7" kindref="member">module_param</ref>(<ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="83" refid="example__driver_8c_1ae0d999635dc45748a8691bbfe8a7ee71" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1af25cc749320e2c0cc2b4cbc480afbb22" kindref="member">MODULE_PARM_DESC</ref>(<ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Watchdog<sp/>cannot<sp/>be<sp/>stopped<sp/>once<sp/>started<sp/>(default=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__MODULE_STRING(WATCHDOG_NOWAYOUT)<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>Whack<sp/>the<sp/>dog</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1aeff2bae2a39979669bbe1150872b5fb9" kindref="member">wdt_timer_ping</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timer_list<sp/>*unused)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>got<sp/>a<sp/>heartbeat<sp/>pulse<sp/>within<sp/>the<sp/>WDT_US_INTERVAL</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>agree<sp/>to<sp/>ping<sp/>the<sp/>WDT</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_before(jiffies,<sp/><ref refid="example__driver_8c_1a11569047c88708a1564c566d8641309e" kindref="member">next_heartbeat</ref>))<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ping<sp/>the<sp/>WDT<sp/>(this<sp/>is<sp/>actually<sp/>a<sp/>disarm/arm<sp/>sequence)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_read_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,<sp/>0x92,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_WDT,<sp/>(tmp<sp/>&amp;<sp/>~ALI_WDT_ARM));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_WDT,<sp/>(tmp<sp/>|<sp/>ALI_WDT_ARM));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_read_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>tmp<sp/>|<sp/>0x20);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>tmp<sp/>&amp;<sp/>~0x20);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_warn(</highlight><highlight class="stringliteral">&quot;Heartbeat<sp/>lost!<sp/>Will<sp/>not<sp/>ping<sp/>the<sp/>watchdog\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Re-set<sp/>the<sp/>timer<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>mod_timer(&amp;timer,<sp/>jiffies<sp/>+<sp/>WDT_INTERVAL);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>Utility<sp/>routines</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" kindref="member">wdt_change</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>writeval)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>pci_read_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,<sp/>ALI_7101_WDT,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writeval<sp/>==<sp/>WDT_ENABLE)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_WDT,<sp/>(tmp<sp/>|<sp/>ALI_WDT_ARM));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_read_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>tmp<sp/>&amp;<sp/>~0x20);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_WDT,<sp/>(tmp<sp/>&amp;<sp/>~ALI_WDT_ARM));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_read_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ALI_7101_GPIO_O,<sp/>tmp<sp/>|<sp/>0x20);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" kindref="member">wdt_startup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a11569047c88708a1564c566d8641309e" kindref="member">next_heartbeat</ref><sp/>=<sp/>jiffies<sp/>+<sp/>(<ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref><sp/>*<sp/>HZ);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>must<sp/>enable<sp/>before<sp/>we<sp/>kick<sp/>off<sp/>the<sp/>timer<sp/>in<sp/>case<sp/>the<sp/>timer</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>occurs<sp/>as<sp/>we<sp/>ping<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" kindref="member">wdt_change</ref>(WDT_ENABLE);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>the<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>mod_timer(&amp;timer,<sp/>jiffies<sp/>+<sp/>WDT_INTERVAL);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Watchdog<sp/>timer<sp/>is<sp/>now<sp/>enabled\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" kindref="member">wdt_turnoff</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>the<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>del_timer_sync(&amp;timer);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" kindref="member">wdt_change</ref>(WDT_DISABLE);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Watchdog<sp/>timer<sp/>is<sp/>now<sp/>disabled...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" kindref="member">wdt_keepalive</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>user<sp/>land<sp/>ping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a11569047c88708a1564c566d8641309e" kindref="member">next_heartbeat</ref><sp/>=<sp/>jiffies<sp/>+<sp/>(<ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref><sp/>*<sp/>HZ);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>/dev/watchdog<sp/>handling</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/><ref refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" kindref="member">fop_write</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>file<sp/>*file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__user<sp/>*buf,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/>loff_t<sp/>*ppos)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>we<sp/>got<sp/>the<sp/>magic<sp/>character<sp/>&apos;V&apos;<sp/>and<sp/>reload<sp/>the<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ofs;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>just<sp/>in<sp/>case<sp/>someone<sp/>wrote<sp/>the<sp/>magic<sp/>character</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>five<sp/>months<sp/>ago...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" kindref="member">wdt_expect_close</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ofs<sp/>=<sp/>0;<sp/>ofs<sp/>!=<sp/>count;<sp/>ofs++)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_user(c,<sp/>buf<sp/>+<sp/>ofs))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EFAULT;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" kindref="member">wdt_expect_close</ref><sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>someone<sp/>wrote<sp/>to<sp/>us,<sp/>we<sp/>should<sp/>restart<sp/>timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" kindref="member">wdt_keepalive</ref>();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" kindref="member">fop_open</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>inode<sp/>*inode,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>file<sp/>*file)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>in<sp/>case<sp/>we&apos;re<sp/>already<sp/>talking<sp/>to<sp/>someone...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_and_set_bit(0,<sp/>&amp;<ref refid="example__driver_8c_1a1f170f01cbb5c4ad3fe404d2e6ab740c" kindref="member">wdt_is_open</ref>))</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EBUSY;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Good,<sp/>fire<sp/>up<sp/>the<sp/>show<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" kindref="member">wdt_startup</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream_open(inode,<sp/>file);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" kindref="member">fop_close</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>inode<sp/>*inode,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>file<sp/>*file)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" kindref="member">wdt_expect_close</ref><sp/>==<sp/>42)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" kindref="member">wdt_turnoff</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wim:<sp/>shouldn&apos;t<sp/>there<sp/>be<sp/>a:<sp/>del_timer(&amp;timer);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_crit(</highlight><highlight class="stringliteral">&quot;device<sp/>file<sp/>closed<sp/>unexpectedly.<sp/>Will<sp/>not<sp/>stop<sp/>the<sp/>WDT!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_bit(0,<sp/>&amp;<ref refid="example__driver_8c_1a1f170f01cbb5c4ad3fe404d2e6ab740c" kindref="member">wdt_is_open</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a1a03691498f9faf5b6dfd4cca0e8a500" kindref="member">wdt_expect_close</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="example__driver_8c_1ab669840a7c61624e8a787530ad2b0ed0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a243d17718e8710d65139b4ac93320c5a" kindref="member">fop_ioctl</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>file<sp/>*file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>arg)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__user<sp/>*argp<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__user<sp/>*)arg;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__user<sp/>*p<sp/>=<sp/>argp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">watchdog_info<sp/>ident<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.options<sp/>=<sp/>WDIOF_KEEPALIVEPING<sp/>|<sp/>WDIOF_SETTIMEOUT</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>WDIOF_MAGICCLOSE,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.firmware_version<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.identity<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ALiM7101&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cmd)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_GETSUPPORT:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_to_user(argp,<sp/>&amp;ident,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ident))<sp/>?<sp/>-EFAULT<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_GETSTATUS:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_GETBOOTSTATUS:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>put_user(0,<sp/>p);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_SETOPTIONS:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_options,<sp/>retval<sp/>=<sp/>-EINVAL;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_user(new_options,<sp/>p))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EFAULT;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_options<sp/>&amp;<sp/>WDIOS_DISABLECARD)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" kindref="member">wdt_turnoff</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_options<sp/>&amp;<sp/>WDIOS_ENABLECARD)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1aa057aca9c16ed32236f8c94e08247654" kindref="member">wdt_startup</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_KEEPALIVE:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" kindref="member">wdt_keepalive</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_SETTIMEOUT:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_timeout;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_user(new_timeout,<sp/>p))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EFAULT;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arbitrary<sp/>upper<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_timeout<sp/>&lt;<sp/>1<sp/>||<sp/>new_timeout<sp/>&gt;<sp/>3600)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EINVAL;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref><sp/>=<sp/>new_timeout;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a2ff24cab712eddb2de14ceb9594b05a0" kindref="member">wdt_keepalive</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fallthrough;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WDIOC_GETTIMEOUT:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>put_user(<ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref>,<sp/>p);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOTTY;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">file_operations<sp/><ref refid="example__driver_8c_1af86896cad0da8791f61f01fdd0fc5205" kindref="member">wdt_fops</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>.owner<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>THIS_MODULE,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>.llseek<sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/>no_llseek,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>.write<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="example__driver_8c_1a82ddd0af9227ef2d8eeb5b4db05feeef" kindref="member">fop_write</ref>,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>.open<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="example__driver_8c_1a0dc447c4c34dceb9ff45f072ba0febe1" kindref="member">fop_open</ref>,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>.release<sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><ref refid="example__driver_8c_1ad1a4c53e7240d7dfe8efa5066a834289" kindref="member">fop_close</ref>,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>.unlocked_ioctl<sp/>=<sp/><sp/><sp/><ref refid="example__driver_8c_1a243d17718e8710d65139b4ac93320c5a" kindref="member">fop_ioctl</ref>,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>.compat_ioctl<sp/><sp/><sp/>=<sp/><sp/><sp/>compat_ptr_ioctl,</highlight></codeline>
<codeline lineno="298"><highlight class="normal">};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">miscdevice<sp/><ref refid="example__driver_8c_1ab669840a7c61624e8a787530ad2b0ed0" kindref="member">wdt_miscdev</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>.minor<sp/><sp/>=<sp/><sp/><sp/>WATCHDOG_MINOR,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>.name<sp/><sp/><sp/>=<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;watchdog&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>.fops<sp/><sp/><sp/>=<sp/><sp/><sp/>&amp;<ref refid="example__driver_8c_1af86896cad0da8791f61f01fdd0fc5205" kindref="member">wdt_fops</ref>,</highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="example__driver_8c_1a5ea88b520e14d10783acd0b3aa375c0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1a8923bf5bb4f48d96b3eb5c7ad0953025" kindref="member">wdt_restart_handle</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>notifier_block<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mode,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cmd)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Cobalt<sp/>devices<sp/>have<sp/>no<sp/>way<sp/>of<sp/>rebooting<sp/>themselves<sp/>other</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>than<sp/>getting<sp/>the<sp/>watchdog<sp/>to<sp/>pull<sp/>reset,<sp/>so<sp/>we<sp/>restart<sp/>the</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>watchdog<sp/>on<sp/>reboot<sp/>with<sp/>no<sp/>heartbeat.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a476220d916d55dc35efa3e3123f784ad" kindref="member">wdt_change</ref>(WDT_ENABLE);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>loop<sp/>until<sp/>the<sp/>watchdog<sp/>fires<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NOTIFY_DONE;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">notifier_block<sp/><ref refid="example__driver_8c_1a5ea88b520e14d10783acd0b3aa375c0f" kindref="member">wdt_restart_handler</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>.notifier_call<sp/>=<sp/><ref refid="example__driver_8c_1a8923bf5bb4f48d96b3eb5c7ad0953025" kindref="member">wdt_restart_handle</ref>,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>.priority<sp/>=<sp/>128,</highlight></codeline>
<codeline lineno="326"><highlight class="normal">};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/><sp/>Notifier<sp/>for<sp/>system<sp/>down</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="example__driver_8c_1ae2e656b6006f19d3b65a7e6b49bb3d4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example__driver_8c_1ae2e656b6006f19d3b65a7e6b49bb3d4e" kindref="member">wdt_notify_sys</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>notifier_block<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>code,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*unused)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>SYS_DOWN<sp/>||<sp/>code<sp/>==<sp/>SYS_HALT)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" kindref="member">wdt_turnoff</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NOTIFY_DONE;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>WDT<sp/>needs<sp/>to<sp/>learn<sp/>about<sp/>soft<sp/>shutdowns<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/><sp/>turn<sp/>the<sp/>timebomb<sp/>registers<sp/>off.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">notifier_block<sp/><ref refid="example__driver_8c_1a384322b2b20db238eeeeb0663fef4234" kindref="member">wdt_notifier</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>.notifier_call<sp/>=<sp/><ref refid="example__driver_8c_1ae2e656b6006f19d3b65a7e6b49bb3d4e" kindref="member">wdt_notify_sys</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal">};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__exit<sp/><ref refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" kindref="member">alim7101_wdt_unload</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a603a31ce8564475af9d14d5cb9517c8d" kindref="member">wdt_turnoff</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Deregister<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>misc_deregister(&amp;<ref refid="example__driver_8c_1ab669840a7c61624e8a787530ad2b0ed0" kindref="member">wdt_miscdev</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>unregister_reboot_notifier(&amp;<ref refid="example__driver_8c_1a384322b2b20db238eeeeb0663fef4234" kindref="member">wdt_notifier</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>unregister_restart_handler(&amp;<ref refid="example__driver_8c_1a5ea88b520e14d10783acd0b3aa375c0f" kindref="member">wdt_restart_handler</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>pci_dev_put(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__init<sp/><ref refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" kindref="member">alim7101_wdt_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/>-EBUSY;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pci_dev<sp/>*ali1543_south;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Steve<sp/>Hill<sp/>&lt;steve@navaho.co.uk&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref><sp/>=<sp/>pci_get_device(PCI_VENDOR_ID_AL,<sp/>PCI_DEVICE_ID_AL_M7101,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;ALi<sp/>M7101<sp/>PMU<sp/>not<sp/>present<sp/>-<sp/>WDT<sp/>not<sp/>set\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-EBUSY;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>WDT<sp/>in<sp/>the<sp/>PMU<sp/>to<sp/>1<sp/>second<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>pci_write_config_byte(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>,<sp/>ALI_7101_WDT,<sp/>0x02);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ali1543_south<sp/>=<sp/>pci_get_device(PCI_VENDOR_ID_AL,<sp/>PCI_DEVICE_ID_AL_M1533,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ali1543_south)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;ALi<sp/>1543<sp/>South-Bridge<sp/>not<sp/>present<sp/>-<sp/>WDT<sp/>not<sp/>set\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>pci_read_config_byte(ali1543_south,<sp/>0x5e,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>pci_dev_put(ali1543_south);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmp<sp/>&amp;<sp/>0x1e)<sp/>==<sp/>0x00)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="example__driver_8c_1a2f00e51c8ed4e4ce8a342d3cb6fa9fc7" kindref="member">use_gpio</ref>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;Detected<sp/>old<sp/>alim7101<sp/>revision<sp/>&apos;a1d&apos;.<sp/><sp/>If<sp/>this<sp/>is<sp/>a<sp/>cobalt<sp/>board,<sp/>set<sp/>the<sp/>&apos;use_gpio&apos;<sp/>module<sp/>parameter.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tmp<sp/>&amp;<sp/>0x1e)<sp/>!=<sp/>0x12<sp/>&amp;&amp;<sp/>(tmp<sp/>&amp;<sp/>0x1e)<sp/>!=<sp/>0x00)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;ALi<sp/>1543<sp/>South-Bridge<sp/>does<sp/>not<sp/>have<sp/>the<sp/>correct<sp/>revision<sp/>number<sp/>(???1001?)<sp/>-<sp/>WDT<sp/>not<sp/>set\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&lt;<sp/>1<sp/>||<sp/>timeout<sp/>&gt;<sp/>3600)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arbitrary<sp/>upper<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref><sp/>=<sp/>WATCHDOG_TIMEOUT;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;timeout<sp/>value<sp/>must<sp/>be<sp/>1<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>3600,<sp/>using<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>register_reboot_notifier(&amp;<ref refid="example__driver_8c_1a384322b2b20db238eeeeb0663fef4234" kindref="member">wdt_notifier</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;cannot<sp/>register<sp/>reboot<sp/>notifier<sp/>(err=%d)\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>register_restart_handler(&amp;<ref refid="example__driver_8c_1a5ea88b520e14d10783acd0b3aa375c0f" kindref="member">wdt_restart_handler</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;cannot<sp/>register<sp/>restart<sp/>handler<sp/>(err=%d)\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out_reboot;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>misc_register(&amp;<ref refid="example__driver_8c_1ab669840a7c61624e8a787530ad2b0ed0" kindref="member">wdt_miscdev</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_err(</highlight><highlight class="stringliteral">&quot;cannot<sp/>register<sp/>miscdev<sp/>on<sp/>minor=%d<sp/>(err=%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1ab669840a7c61624e8a787530ad2b0ed0" kindref="member">wdt_miscdev</ref>.minor,<sp/>rc);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err_out_restart;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__module_get(THIS_MODULE);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_info(</highlight><highlight class="stringliteral">&quot;WDT<sp/>driver<sp/>for<sp/>ALi<sp/>M7101<sp/>initialised.<sp/>timeout=%d<sp/>sec<sp/>(nowayout=%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="example__driver_8c_1a493b57f443cc38b3d3df9c1e584d9d82" kindref="member">timeout</ref>,<sp/><ref refid="example__driver_8c_1aba0a2f668063d203f3f69c04a5fc9c3b" kindref="member">nowayout</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">err_out_restart:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>unregister_restart_handler(&amp;<ref refid="example__driver_8c_1a5ea88b520e14d10783acd0b3aa375c0f" kindref="member">wdt_restart_handler</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal">err_out_reboot:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>unregister_reboot_notifier(&amp;<ref refid="example__driver_8c_1a384322b2b20db238eeeeb0663fef4234" kindref="member">wdt_notifier</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">err_out:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>pci_dev_put(<ref refid="example__driver_8c_1ad02a34a495b7ef14e5014354603c47de" kindref="member">alim7101_pmu</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="example__driver_8c_1a42c0391451b261972c315e7044b068aa" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1a42c0391451b261972c315e7044b068aa" kindref="member">module_init</ref>(<ref refid="example__driver_8c_1acd818f935316445bbdd26b2290c2bb37" kindref="member">alim7101_wdt_init</ref>);</highlight></codeline>
<codeline lineno="439" refid="example__driver_8c_1a2e179075564f32d7818698bb5d675973" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1a2e179075564f32d7818698bb5d675973" kindref="member">module_exit</ref>(<ref refid="example__driver_8c_1ad0aa5b17faa6e8f18ca50defd4885670" kindref="member">alim7101_wdt_unload</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="example__driver_8c_1a94f12b23eabb77bfb3f23292aef71505" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pci_device_id<sp/>alim7101_pci_tbl[]<sp/><ref refid="example__driver_8c_1a94f12b23eabb77bfb3f23292aef71505" kindref="member">__used</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>PCI_DEVICE(PCI_VENDOR_ID_AL,<sp/>PCI_DEVICE_ID_AL_M1533)<sp/>},</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>PCI_DEVICE(PCI_VENDOR_ID_AL,<sp/>PCI_DEVICE_ID_AL_M7101)<sp/>},</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="example__driver_8c_1a5024044360a43a8858b6a6976245f194" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1a5024044360a43a8858b6a6976245f194" kindref="member">MODULE_DEVICE_TABLE</ref>(pci,<sp/>alim7101_pci_tbl);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="example__driver_8c_1ae6b71481a5b225cf5c716e9ab45acfe9" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1ae6b71481a5b225cf5c716e9ab45acfe9" kindref="member">MODULE_AUTHOR</ref>(</highlight><highlight class="stringliteral">&quot;Steve<sp/>Hill&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450" refid="example__driver_8c_1a57197bb88ab87ed1035ff242938b2335" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1a57197bb88ab87ed1035ff242938b2335" kindref="member">MODULE_DESCRIPTION</ref>(</highlight><highlight class="stringliteral">&quot;ALi<sp/>M7101<sp/>PMU<sp/>Computer<sp/>Watchdog<sp/>Timer<sp/>driver&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451" refid="example__driver_8c_1ad94b36675e7eb067ea3ce6ff9e244a44" refkind="member"><highlight class="normal"><ref refid="example__driver_8c_1ad94b36675e7eb067ea3ce6ff9e244a44" kindref="member">MODULE_LICENSE</ref>(</highlight><highlight class="stringliteral">&quot;GPL&quot;</highlight><highlight class="normal">);</highlight></codeline>
    </programlisting>
    <location file="tests/resources/example_driver.c"/>
  </compounddef>
</doxygen>
